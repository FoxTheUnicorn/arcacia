Index: src/arcacia/game/handler/CollisionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package arcacia.game.handler;\r\n\r\nimport arcacia.game.objects.GameObject;\r\nimport arcacia.game.objects.PlayerObject;\r\nimport arcacia.game.objects.enemy.Enemy;\r\nimport arcacia.game.objects.item.Item;\r\nimport arcacia.game.objects.tile.DoorObject;\r\n\r\npublic class CollisionHandler {\r\n\r\n    public static GameObject collision(GameObject initiator, GameObject collider) {\r\n        if (collider == null) return null;\r\n\r\n        if(initiator instanceof PlayerObject) {\r\n            return playerCollision((PlayerObject) initiator, collider);\r\n        }\r\n        else if (initiator instanceof Enemy) {\r\n            return enemyCollision((Enemy) initiator, collider);\r\n        }else if(initiator instanceof DoorObject){\r\n            return doorCollision((DoorObject) initiator,collider);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private static GameObject playerCollision(PlayerObject player, GameObject collider) {\r\n        //if (collider instanceof Coin){}\r\n        /*else*/ if (collider instanceof Enemy enemy) {\r\n            //if(ItemHandler.hasPowerPill()) { enemy.kill(); PlayerHandler.addScore(ConstantHandler.scoreEnemyKill); return null;\r\n            PlayerHandler.decrementLives();\r\n            //reset Level etc.\r\n        }\r\n\r\n        return collider;\r\n    }\r\n\r\n    private static GameObject enemyCollision(Enemy enemy, GameObject collider) {\r\n        if (collider instanceof PlayerObject) {\r\n            PlayerHandler.decrementLives();\r\n        } return collider;\r\n    }\r\n\r\n    private static GameObject doorCollision(DoorObject door, GameObject collider){\r\n        //Wenn Kollision mit Player und Player hat Key eingesammelt. sonst passiert nichts\r\n        if(collider instanceof PlayerObject && PlayerHandler.hasKey()  ){\r\n            /*Load next Level */\r\n        }\r\n        return collider;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/arcacia/game/handler/CollisionHandler.java b/src/arcacia/game/handler/CollisionHandler.java
--- a/src/arcacia/game/handler/CollisionHandler.java	(revision 577ca83477c461cafa51faa65a9b98e8f3a4a360)
+++ b/src/arcacia/game/handler/CollisionHandler.java	(date 1638895999826)
@@ -40,6 +40,7 @@
         } return collider;
     }
 
+    //Spieler soll collider sein
     private static GameObject doorCollision(DoorObject door, GameObject collider){
         //Wenn Kollision mit Player und Player hat Key eingesammelt. sonst passiert nichts
         if(collider instanceof PlayerObject && PlayerHandler.hasKey()  ){
Index: src/arcacia/game/handler/PlayerHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package arcacia.game.handler;\r\n\r\nimport arcacia.game.objects.PlayerObject;\r\n\r\npublic class PlayerHandler extends PlayerObject{\r\n    private static boolean hasKey = false;\r\n    private static int lives = 3;\r\n    private static int score = 0;\r\n    private static int multiplier = 1;\r\n    private static PlayerObject player;\r\n\r\n\r\n    public static void incrementLives() {\r\n        lives++;\r\n    }\r\n    public static void decrementLives() {\r\n        lives--;\r\n    }\r\n\r\n    public int addScore(int score) {\r\n        PlayerHandler.score += /*ItemHandler.getMultiplier() * */ score;\r\n        return PlayerHandler.score;\r\n    }\r\n\r\n\r\n    //region Getter/Setter\r\n    public static void setSpeed(int speed){PlayerObject.speed = speed;}\r\n    \r\n    public static int getSpeed(){return speed;};\r\n\r\n    public static boolean hasKey() {\r\n        return hasKey;\r\n    }\r\n\r\n    public static void setHasKey(boolean hasKey) {\r\n        PlayerHandler.hasKey = hasKey;\r\n    }\r\n\r\n    public static int getLives() {\r\n        return lives;\r\n    }\r\n\r\n    public static void setLives(int lives) {\r\n        PlayerHandler.lives = lives;\r\n    }\r\n\r\n    public static int getScore() {\r\n        return score;\r\n    }\r\n\r\n    public static void setScore(int score) {\r\n        PlayerHandler.score = score;\r\n    }\r\n\r\n    public static void addToScore(int score)\r\n    {\r\n        setScore(getScore() + score * multiplier);\r\n    }\r\n\r\n    public static PlayerObject getPlayer() {\r\n        return player;\r\n    }\r\n\r\n    public static void setPlayer(PlayerObject player) {\r\n        PlayerHandler.player = player;\r\n    }\r\n\r\n    public static int getMultiplier() {\r\n        return multiplier;\r\n    }\r\n\r\n    public static void setMultiplier(int multiplier) {\r\n        PlayerHandler.multiplier = multiplier;\r\n    }\r\n    //endregion\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/arcacia/game/handler/PlayerHandler.java b/src/arcacia/game/handler/PlayerHandler.java
--- a/src/arcacia/game/handler/PlayerHandler.java	(revision 577ca83477c461cafa51faa65a9b98e8f3a4a360)
+++ b/src/arcacia/game/handler/PlayerHandler.java	(date 1638895314699)
@@ -24,9 +24,9 @@
 
 
     //region Getter/Setter
-    public static void setSpeed(int speed){PlayerObject.speed = speed;}
+   // public static void setSpeed(int speed){PlayerObject.speed = speed;}
     
-    public static int getSpeed(){return speed;};
+  //  public static int getSpeed(){return speed;};
 
     public static boolean hasKey() {
         return hasKey;
Index: src/arcacia/Editor/Editor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/arcacia/Editor/Editor.java b/src/arcacia/Editor/Editor.java
new file mode 100644
--- /dev/null	(date 1639043001896)
+++ b/src/arcacia/Editor/Editor.java	(date 1639043001896)
@@ -0,0 +1,4 @@
+package arcacia.Editor;
+
+public class Editor {
+}
Index: src/arcacia/game/handler/GameHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package arcacia.game.handler;\r\n\r\nimport arcacia.game.objects.GameObject;\r\nimport arcacia.game.objects.PlayerObject;\r\nimport arcacia.game.objects.enemy.Enemy;\r\nimport arcacia.game.util.Location;\r\n\r\npublic class GameHandler {\r\n\r\n    public static boolean isRunning;\r\n    public static int playerTimeout = 0;\r\n    public static volatile int playerTurn = 1;\r\n    public static int enemyTimeout = 0;\r\n\r\n\r\n    //Setter/Getter\r\n\r\n    public void setEnemyTimeout(int enemyTimeout){\r\n        GameHandler.enemyTimeout = enemyTimeout;\r\n    }\r\n    public static int getEnemyTimeout(){\r\n        return enemyTimeout;\r\n    }\r\n\r\n    public void setPlayerTimeout(int playerTimeout){\r\n        GameHandler.playerTimeout = playerTimeout;\r\n    }\r\n\r\n    public static int getPlayerTimeout(){\r\n        return playerTimeout;\r\n    }\r\n\r\n    public void setPlayerTurn(int playerTurn){\r\n        GameHandler.playerTurn = playerTurn;\r\n\r\n    }\r\n\r\n    public static int getPlayerTurn(){\r\n        return playerTurn;\r\n    }\r\n\r\n\r\n    public void Gameloop() throws InterruptedException {\r\n\r\n\r\n        while (playerTurn != 0 && isRunning) {\r\n\r\n\r\n            playerTurn++;\r\n            /*\r\n                Delay, nach Turn eines Spielers\r\n             */\r\n            Thread.sleep(2000); //\r\n\r\n            if(enemyTimeout == 0){\r\n\r\n                /*\r\n                    Gegnern Begewen sich\r\n                 */\r\n                enemyTimeout++;\r\n\r\n                //\r\n            }\r\n            else{\r\n\r\n                /*\r\n                    Gegner wird pausiert und dekrementiert\r\n                 */\r\n                //Gegner hier wird pausiert( später)\r\n\r\n                enemyTimeout--;\r\n                Enemy.setStopwatchOn(true);\r\n                Thread.sleep(2000);\r\n\r\n            }\r\n            Enemy.setStopwatchOn(false);\r\n           // isRunning = true;\r\n            Thread.sleep(2000);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/arcacia/game/handler/GameHandler.java b/src/arcacia/game/handler/GameHandler.java
--- a/src/arcacia/game/handler/GameHandler.java	(revision 577ca83477c461cafa51faa65a9b98e8f3a4a360)
+++ b/src/arcacia/game/handler/GameHandler.java	(date 1638896355110)
@@ -10,17 +10,12 @@
     public static boolean isRunning;
     public static int playerTimeout = 0;
     public static volatile int playerTurn = 1;
-    public static int enemyTimeout = 0;
+
 
 
     //Setter/Getter
 
-    public void setEnemyTimeout(int enemyTimeout){
-        GameHandler.enemyTimeout = enemyTimeout;
-    }
-    public static int getEnemyTimeout(){
-        return enemyTimeout;
-    }
+
 
     public void setPlayerTimeout(int playerTimeout){
         GameHandler.playerTimeout = playerTimeout;
@@ -52,30 +47,15 @@
              */
             Thread.sleep(2000); //
 
-            if(enemyTimeout == 0){
-
-                /*
-                    Gegnern Begewen sich
-                 */
-                enemyTimeout++;
+            /*GEgner bewegen sich */
 
-                //
-            }
-            else{
-
-                /*
-                    Gegner wird pausiert und dekrementiert
-                 */
-                //Gegner hier wird pausiert( später)
-
-                enemyTimeout--;
-                Enemy.setStopwatchOn(true);
+               // Enemy.setStopwatchOn(true);
                 Thread.sleep(2000);
 
             }
-            Enemy.setStopwatchOn(false);
+          //  Enemy.setStopwatchOn(false);
            // isRunning = true;
-            Thread.sleep(2000);
+          //  Thread.sleep(2000);
 
         }
 
